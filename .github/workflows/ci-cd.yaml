name: Java CI with Maven

on:
  push:
    branches: 
     - main 
     - feature/*
     - develop
     - hotfix/*
     - staging
  pull_request:
    branches: 
     - main 
     - staging

jobs:
  build:
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn clean verify sonar:sonar -Dsonar.projectKey=boardgame -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: boardgame-artifact
        path: target/*.jar

  security_scan:
    needs: build
    runs-on: [self-hosted]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4
    
    - name: TRIVY FS SCAN 
      run: |
        trivy fs --format table -o trivy_report.html .

    - name: Upload TRIVY Report
      uses: actions/upload-artifact@v3
      with:
        name: trivy_report
        path: trivy_report.html

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: setup docker buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub 
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: |
        docker --version
        docker build -t tanujarora27/boardgame:latest .

    - name: Scan Docker Image 
      run: trivy image --severity CRITICAL -f html -o results.html tanujarora27/boardgame:latest
    
    - name: Upload Scan Results
      uses: actions/upload-artifact@v3
      with:
        name: docker_image_trivy_report
        path: results.html
    
    - name: Push to Docker Hub
      if: github.event_name == 'push'
      run: docker push tanujarora27/boardgame:latest
    
  deploy:
     needs: security_scan
     runs-on: [self-hosted]
     steps:
     - name: Checkout repository
       uses: actions/checkout@v4
     - name: Deploy to kubernetes
       uses: tale/kubectl-action@v1
       with:
        base64-kube-config: ${{ secrets.KUBE_CONFIG_SECRET }}
     - run: |
        kubectl apply -f kubernetes/deployment-service.yaml
        kubectl get svc -n boardgame
