name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SONAR_HOST_URL: "http://4.236.181.165:9000"
  NEXUS_URL: "http://20.55.106.40:8085"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: "11"
        distribution: "temurin"

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn package -DskipTests

    - name: Upload JAR
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: target/*.jar

  sonarqube-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    # - name: Build and analyze
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_URL }}
    #   run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  docker-build-and-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download JAR
      uses: actions/download-artifact@v3
      with:
        name: app-jar
        path: target

    - name: Build Docker image
      run: docker build -t boardgame:latest .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "boardgame:latest"
        format: "sarif"
        output: "trivy-results.sarif"

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: "trivy-results.sarif"

  # deploy-to-nexus:
  #   needs: [docker-build-and-scan]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: "11"
  #       distribution: "temurin"

  #   - name: Download JAR
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: app-jar
  #       path: target

  #   - name: Get project version
  #     run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

  #   - name: Get artifact ID
  #     run: echo "ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)" >> $GITHUB_ENV

  #   - name: Deploy to Nexus
  #     uses: sonatype-nexus-community/nexus-repo-github-action@master
  #     with:
  #       serverUrl: ${{ secrets.NEXUS_URL }}
  #       username: ${{ secrets.NEXUS_USERNAME }}
  #       password: ${{ secrets.NEXUS_PASSWORD }}
  #       format: maven2
  #       repository: maven-releases
  #       coordinates: groupId=com.example artifactId=${{ env.ARTIFACT_ID }} version=${{ env.PROJECT_VERSION }}
  #       assets: extension=jar
  #       filename: ./target/${{ env.ARTIFACT_ID }}-${{ env.PROJECT_VERSION }}.jar
